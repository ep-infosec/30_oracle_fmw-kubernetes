<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle Fusion Middleware on Kubernetes</title>
    <link>/fmw-kubernetes/22.4.1/</link>
    <description>Recent content on Oracle Fusion Middleware on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Apr 2019 06:46:23 -0500</lastBuildDate>
    
	<atom:link href="/fmw-kubernetes/22.4.1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Preparing an OKE environment</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/prepare-oke-environment/</link>
      <pubDate>Sun, 14 Feb 2021 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/prepare-oke-environment/</guid>
      <description>Contents  Create Public SSH Key to access all the Bastion and Worker nodes Create a compartment for OKE Create Container Clusters (OKE) Create Bastion Node to access Cluster Setup OCI CLI to download kubeconfig and access OKE Cluster  Create Public SSH Key to access all the Bastion and Worker nodes Create SSH key using ssh-keygen on linux terminal to access (ssh) the Compute instances (worker/bastion) in OCI.
ssh-keygen -t rsa -N &amp;#34;&amp;#34; -b 2048 -C demokey -f id_rsa Create a compartment for OKE Within your tenancy, there must be a compartment to contain the necessary network resources (VCN, subnets, internet gateway, route table, security lists).</description>
    </item>
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/appendix/wcc-cluster-sizing-info/</link>
      <pubDate>Mon, 01 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/appendix/wcc-cluster-sizing-info/</guid>
      <description>Oracle WebCenter Content cluster sizing recommendations    Oracle WCC Normal Usage Moderate Usage High Usage     Administration Server No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB No of CPU core(s) : 1, Memory : 4GB   Number of Managed Servers 2 3 5   Configurations per Managed Server No of CPU core(s) : 2, Memory : 16GB No of CPU core(s) : 4, Memory : 16GB No of CPU core(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Preparing a file system</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/filesystem/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/filesystem/</guid>
      <description>Create Filesystem and security list for FSS  Note: Make sure you create the filesystem and security list in the OKE created VCN
   Login to OCI Console and go to Storage and Click File System   Click Create File System   You can create File System and Mount Targets with the default values. But in case you want to rename the file System and mount targets, follow below steps.</description>
    </item>
    
    <item>
      <title>Preparing OCIR</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/ocir/</link>
      <pubDate>Sat, 21 Sep 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/ocir/</guid>
      <description>Publish images to OCIR Push all the required images to OCIR and subsequently use from there. Follow the below steps for pushing the images to OCIR
Create an &amp;ldquo;Auth token&amp;rdquo; Create an &amp;ldquo;Auth token&amp;rdquo; which will be used as docker password to push and pull images from OCIR. Login to OCI Console and navigate to User Settings, which is in the drop down under your OCI user-profile, located at the top-right corner of the OCI console page.</description>
    </item>
    
    <item>
      <title>a. Using Design Console with NGINX(non-SSL)</title>
      <link>/fmw-kubernetes/22.4.1/oig/configure-design-console/using-the-design-console-with-nginx-non-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/configure-design-console/using-the-design-console-with-nginx-non-ssl/</guid>
      <description>Configure an NGINX ingress (non-SSL) to allow Design Console to connect to your Kubernetes cluster.
  Prerequisites
  Setup routing rules for the Design Console ingress
  Create the ingress
  Update the T3 channel
  Restart the OIG Managed Server
  Design Console client
a. Using an on-premises installed Design Console
b. Using a container image for Design Console
  Login to the Design Console</description>
    </item>
    
    <item>
      <title>Domain life cycle</title>
      <link>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/domain-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/domain-lifecycle/</guid>
      <description>View existing OIG servers Starting/Scaling up OIG Managed servers Stopping/Scaling down OIG Managed servers Stopping and starting the Administration Server and Managed Servers Domain lifecycle sample scripts  As OIG domains use the WebLogic Kubernetes Operator, domain lifecyle operations are managed using the WebLogic Kubernetes Operator itself.
This document shows the basic operations for starting, stopping and scaling servers in the OIG domain.
For more detailed information refer to Domain Life Cycle in the WebLogic Kubernetes Operator documentation.</description>
    </item>
    
    <item>
      <title>Patch an image</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/patch_and_upgrade/patch-an-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/patch_and_upgrade/patch-an-image/</guid>
      <description>Oracle aims to release Oracle WebCenter Content images regularly with latest bundle and recommended interim patches in My Oracle Support (MOS). However, if there is a need to create images with new bundle and interim patches, you can build these images using WebLogic Image Tool.
If you have access to the Oracle WebCenter Content patches, you can patch an existing Oracle WebCenter Content image with a bundle patch and interim patches.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/22.4.1/oam/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle Access Management on Kubernetes.
Recent changes    Date Version Change     October, 2022 22.4.1 Supports Oracle Access Management 12.2.1.4 domain deployment using the October 2022 container image which contains the October Patch Set Update (PSU) and other fixes released with the Critical Patch Update (CPU) program.     Support for WebLogic Kubernetes Operator 3.4.2.     Additional Ingress mappings added.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/22.4.1/oig/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle Identity Governance on Kubernetes.
Recent changes    Date Version Change     October, 2022 22.4.1 Supports Oracle Identity Governance 12.2.1.4 domain deployment using the October 2022 container image which contains the October Patch Set Update (PSU) and other fixes released with the Critical Patch Update (CPU) program.     Support for WebLogic Kubernetes Operator 3.4.2.     Additional Ingress mappings added.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/22.4.1/oud/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oud/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle Unified Directory on Kubernetes.
Recent changes    Date Version Change     October, 2022 22.4.1 Supports Oracle Unified Directory 12.2.1.4 domain deployment using the October 2022 container image which contains the October Patch Set Update (PSU) and other fixes released with the Critical Patch Update (CPU) program.     Changes to deployment of Logging and Visualization with Elasticsearch and Kibana.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/22.4.1/oudsm/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oudsm/release-notes/</guid>
      <description>Review the latest changes and known issues for Oracle Unified Directory Services Manager on Kubernetes.
Recent changes    Date Version Change     October, 2022 22.4.1 Supports Oracle Unified Directory Services Manager 12.2.1.4 domain deployment using the October 2022 container image which contains the October Patch Set Update (PSU) and other fixes released with the Critical Patch Update (CPU) program.     Changes to deployment of Logging and Visualization with Elasticsearch and Kibana.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/release-notes/</guid>
      <description>Review the latest changes for Oracle WebCenter Content on Kubernetes.
Recent changes    Date Version Change     October 28, 2022 22.4.1 Supports Oracle WebCenter Content 12.2.1.4 domains deployment using July 2022 PSU and known bug fixes - certified for Oracle WebLogic Kubernetes Operator version 3.4.2. Oracle WebCenter Content 12.2.1.4 container image for this release can be downloaded from My Oracle Support (MOS patch 34409720).   June 28, 2022 22.</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/configure-load-balancer/traefik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.6.0 or later for production deployments) to load balance Oracle WebCenter Content domain clusters. You can configure Traefik for non-SSL, SSL termination and end-to-end SSL access of the application URL.
Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Content	domain in a Kubernetes cluster:
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/configure-load-balancer/traefik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/configure-load-balancer/traefik/</guid>
      <description>This section provides information about how to install and configure the ingress-based Traefik load balancer (version 2.6.0 or later for production deployments) to load balance Oracle WebCenter Content domain clusters.
Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Content	domain in a Kubernetes cluster:
Contents   Non-SSL and SSL termination
 Install the Traefik (ingress-based) load balancer Configure Traefik to manage ingresses Create an Ingress for the domain Create a certificate and generate a Kubernetes secret Create Traefik custom resource Install Ingress for SSL termination configuration    End-to-End SSL configuration</description>
    </item>
    
    <item>
      <title>Quick start deployment guide</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/appendix/quickstart-deployment-guide/</link>
      <pubDate>Mon, 01 Feb 2021 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/appendix/quickstart-deployment-guide/</guid>
      <description>Use this Quick Start to create an Oracle WebCenter Content domain deployment in a Kubernetes cluster (on-premise environments) with WebLogic Kubernetes Operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements Supported Linux kernel for deploying and running Oracle WebCenter Content domain with the WebLogic Kubernetes Operator is Oracle Linux 7 (UL6+) and Red Hat Enterprise Linux 7 (UL3+ only with standalone Kubernetes).</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/configure-load-balancer/nginx/</link>
      <pubDate>Tue, 22 Dec 2020 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle WebCenter Content domain clusters. You can configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Content domain in a Kubernetes cluster:
See the official installation document for prerequisites.
  Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/configure-load-balancer/nginx/</link>
      <pubDate>Tue, 22 Dec 2020 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/configure-load-balancer/nginx/</guid>
      <description>This section provides information about how to install and configure the ingress-based NGINX load balancer to load balance Oracle WebCenter Content domain clusters. You can configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL.
Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Content domain in a Kubernetes cluster:
See the official installation document for prerequisites.
Contents   Non-SSL and SSL termination</description>
    </item>
    
    <item>
      <title>b. Using Design Console with NGINX(SSL)</title>
      <link>/fmw-kubernetes/22.4.1/oig/configure-design-console/using-the-design-console-with-nginx-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/configure-design-console/using-the-design-console-with-nginx-ssl/</guid>
      <description>Configure an NGINX ingress (SSL) to allow Design Console to connect to your Kubernetes cluster.
  Prerequisites
  Setup routing rules for the Design Console ingress
  Create the ingress
  Update the T3 channel
  Restart the OIG Managed Server
  Design Console client
a. Using an on-premises installed Design Console
b. Using a container image for Design Console
  Login to the Design Console</description>
    </item>
    
    <item>
      <title>Monitor an Oracle WebCenter Content domain</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/weblogic-monitoring-exporter-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/weblogic-monitoring-exporter-setup/</guid>
      <description>You can monitor a WebCenter Content domain using Prometheus and Grafana by exporting the metrics from the domain instance using the WebLogic Monitoring Exporter.
Set up monitoring for OracleWebCenterContent domain Using the WebLogic Monitoring Exporter you can scrape runtime information from a running Oracle WebCenter Content Suite instance and monitor them using Prometheus and Grafana. Follow these steps to set up monitoring for an Oracle WebCenter Content Suite instance. For more details on WebLogic Monitoring Exporter, see here.</description>
    </item>
    
    <item>
      <title>Upgrade an WebLogic Kubernetes Operator release</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/patch_and_upgrade/upgrade-operator-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/patch_and_upgrade/upgrade-operator-release/</guid>
      <description>These instructions apply to upgrading WebLogic Kubernetes Operators within the 3.x release family as additional versions are released.
To upgrade WebLogic Kubernetes Operator, use the helm upgrade command. Make sure that the weblogic-kubernetes-operator repository on your local machine is at the WebLogic Kubernetes Operator release to which you are upgrading. When upgrading the WebLogic Kubernetes Operator, the helm upgrade command requires that you supply a new Helm chart and image. For example:</description>
    </item>
    
    <item>
      <title>WLST administration operations</title>
      <link>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/wlst-admin-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/wlst-admin-operations/</guid>
      <description>Invoke WLST and access Administration Server To use WLST to administer the OIG domain, use a helper pod in the same Kubernetes cluster as the OIG Domain.
  Check to see if the helper pod exists by running:
$ kubectl get pods -n &amp;lt;domain_namespace&amp;gt; | grep helper For example:
$ kubectl get pods -n oigns | grep helper The output should look similar to the following:
helper 1/1 Running 0 26h If the helper pod doesn&amp;rsquo;t exist then see Step 1 in Prepare your environment  to create it.</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Mon, 01 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Elasticsearch integration for logs</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/elasticsearch-integration/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/elasticsearch-integration/</guid>
      <description>1. Integrate Elasticsearch to WebLogic Kubernetes Operator For reference information, see Elasticsearch integration for the WebLogic Kubernetes Operator.
To enable elasticsearch integration, you must edit file ${WORKDIR}/charts/weblogic-operator/values.yaml before deploying the WebLogic Kubernetes Operator.
# elkIntegrationEnabled specifies whether or not ELK integration is enabled. elkIntegrationEnabled: true # logStashImage specifies the docker image containing logstash. # This parameter is ignored if &#39;elkIntegrationEnabled&#39; is false. logStashImage: &amp;quot;logstash:6.8.23&amp;quot; # elasticSearchHost specifies the hostname of where Elasticsearch is running.</description>
    </item>
    
    <item>
      <title>Runnning OIG utilities</title>
      <link>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/running-oig-utilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/running-oig-utilities/</guid>
      <description>Run OIG utlities inside the OIG Kubernetes cluster.
Run utilities in an interactive bash shell   Access a bash shell inside the &amp;lt;domain_uid&amp;gt;-oim-server1 pod:
$ kubectl -n oigns exec -it &amp;lt;domain_uid&amp;gt;-oim-server1 -- bash For example:
$ kubectl -n oigns exec -it governancedomain-oim-server1 -- bash This will take you into a bash shell in the running &amp;lt;domain_uid&amp;gt;-oim-server1 pod:
[oracle@governancedomain-oim-server1 oracle]$   Navigate to the /u01/oracle/idm/server/bin directory and execute the utility as required.</description>
    </item>
    
    <item>
      <title>Upgrade a Kubernetes cluster</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/patch_and_upgrade/upgrade-k8s-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/patch_and_upgrade/upgrade-k8s-cluster/</guid>
      <description>These instructions describe how to upgrade a Kubernetes cluster created using kubeadm on which an Oracle WebCenter Content domain is deployed. A rolling upgrade approach is used to upgrade nodes (master and worker) of the Kubernetes cluster.
It is expected that there will be a down time during the upgrade of the Kubernetes cluster as the nodes need to be drained as part of the upgrade process.
 Prerequisites  Review Prerequisites and ensure that your Kubernetes cluster is ready for upgrade.</description>
    </item>
    
    <item>
      <title>Publish logs to Elasticsearch</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/weblogic-logging-exporter-setup/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/weblogic-logging-exporter-setup/</guid>
      <description>The WebLogic Logging Exporter adds a log event handler to WebLogic Server. WebLogic Server logs can be pushed to Elasticsearch in Kubernetes directly by using the Elasticsearch REST API. For more details, see to the WebLogic Logging Exporter project.
This sample shows you how to publish WebLogic Server logs to Elasticsearch and view them in Kibana. For publishing WebLogic Kubernetes Operator logs, see this sample.
Prerequisites This document assumes that you have already set up Elasticsearch and Kibana for logs collection.</description>
    </item>
    
    <item>
      <title>Logging and visualization</title>
      <link>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/logging-and-visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/logging-and-visualization/</guid>
      <description>After the OIG domain is set up you can publish operator and WebLogic Server logs into Elasticsearch and interact with them in Kibana.
Install Elasticsearch and Kibana If you do not already have a centralized Elasticsearch (ELK) stack then you must configure this first. For details on how to configure the ELK stack, follow Installing Elasticsearch (ELK) Stack and Kibana
Create the logstash pod Variables used in this chapter In order to create the logstash pod, you must create several files.</description>
    </item>
    
    <item>
      <title>Publish logs to Elasticsearch Using Fluentd</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/logging-fluentd-setup/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/logging-fluentd-setup/</guid>
      <description>Introduction This page describes to how to configure a WebLogic domain to use Fluentd to send log information to Elasticsearch. Here’s the general mechanism for how this works:
 fluentd runs as a separate container in the Administration Server and Managed Server pods The log files reside on a volume that is shared between the weblogic-server and fluentd containers fluentd tails the domain logs files and exports them to Elasticsearch A ConfigMap contains the filter and format rules for exporting log records.</description>
    </item>
    
    <item>
      <title>Monitoring an OIG domain</title>
      <link>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/monitoring-oim-domains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/monitoring-oim-domains/</guid>
      <description>After the OIG domain is set up you can monitor the OIG instance using Prometheus and Grafana. See Monitoring a domain.
The WebLogic Monitoring Exporter uses the WLS RESTful Management API to scrape runtime information and then exports Prometheus-compatible metrics. It is deployed as a web application in a WebLogic Server (WLS) instance, version 12.2.1 or later, typically, in the instance from which you want to get metrics.
There are two ways to setup monitoring and you should choose one method or the other:</description>
    </item>
    
    <item>
      <title>Configure an additional mount or shared space to a domain for Imaging and Capture</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/configure-mount-share/</link>
      <pubDate>Sun, 10 Apr 2022 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/oracle-cloud/configure-mount-share/</guid>
      <description>A volume can be mounted to a server pod which can be accessible directly from outside Kubernetes cluster so that an external application could write new files to it.
This can be used specifically in WebCenter Imaging and WebCenter Capture applications for File Imports.
Kubernetes supports several types of volumes as given in Volumes | Kubernetes.
Further in this section, we will take nfs volume as an example.
Mount &amp;ldquo;nfs&amp;rdquo; as volume Create a NFS File system as described in the section Preparing a file system or an already existing NFS server can also be used.</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/cleanup-domain-setup/</link>
      <pubDate>Mon, 15 Feb 2021 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/cleanup-domain-setup/</guid>
      <description>Learn how to clean up the Oracle WebCenter Content domain setup.
Stop all Administration and Managed server pods First stop the all pods related to a domain. This can be done by patching domain &amp;ldquo;serverStartPolicy&amp;rdquo; to &amp;ldquo;NEVER&amp;rdquo;. Here is the sample command for the same.
$ kubectl patch domain wcc-domain-name -n wcc-namespace --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;NEVER&amp;#34; }]&amp;#39; For example:
kubectl patch domain wccinfra -n wccns --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;replace&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/spec/serverStartPolicy&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;NEVER&amp;#34; }]&amp;#39; Remove the domain   Remove the domain&amp;rsquo;s ingress (for example, Traefik ingress) using Helm:</description>
    </item>
    
    <item>
      <title>Configure an additional mount or shared space to a domain for Imaging and Capture</title>
      <link>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/configure-mount-share/</link>
      <pubDate>Fri, 27 Nov 2020 16:43:45 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/wccontent-domains/adminguide/configure-mount-share/</guid>
      <description>A volume can be mounted to a server pod which can be accessible directly from outside Kubernetes cluster so that an external application could write new files to it.
This can be used specifically in WebCenter Imaging and WebCenter Capture applications for File Imports.
Kubernetes supports several types of volumes as given in Volumes | Kubernetes.
Further in this section, we will take nfs volume as an example.
Mount &amp;ldquo;nfs&amp;rdquo; as volume To use a volume, specify the volumes to provide for the Pod in .</description>
    </item>
    
    <item>
      <title>Delete the OIG domain home</title>
      <link>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/delete-domain-home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/manage-oig-domains/delete-domain-home/</guid>
      <description>Sometimes in production, but most likely in testing environments, you might want to remove the domain home that is generated using the create-domain.sh script.
  Run the following command to delete the domain:
$ cd $WORKDIR/kubernetes/delete-domain $ ./delete-weblogic-domain-resources.sh -d &amp;lt;domain_uid&amp;gt; For example:
$ cd $WORKDIR/kubernetes/delete-domain $ ./delete-weblogic-domain-resources.sh -d governancedomain   Drop the RCU schemas as follows:
$ kubectl exec -it helper -n &amp;lt;domain_namespace&amp;gt; -- /bin/bash [oracle@helper ~]$ [oracle@helper ~]$ export CONNECTION_STRING=&amp;lt;db_host.</description>
    </item>
    
    <item>
      <title>Patch and Upgrade</title>
      <link>/fmw-kubernetes/22.4.1/oud/patch-and-upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oud/patch-and-upgrade/</guid>
      <description>In this section you learn how to upgrade OUD from a previous version. Follow the section relevant to the version you are upgrading from.
 Upgrading to October 22 (22.4.1) or later from releases prior to July 22 (22.3.1) Upgrading to October 22 (22.4.1) or later from July 22 (22.3.1) Upgrading Elasticsearch and Kibana  Upgrading to October 22 (22.4.1) or later from releases prior to July 22 (22.3.1) In releases prior to July 22 (22.</description>
    </item>
    
    <item>
      <title>a) Scaling Up/Down OUD Pods </title>
      <link>/fmw-kubernetes/22.4.1/oud/manage-oud-containers/scaling-up-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oud/manage-oud-containers/scaling-up-down/</guid>
      <description>Introduction This section describes how to increase or decrease the number of OUD pods in the Kubernetes deployment.
View existing OUD pods By default the oud-ds-rs helm chart deployment starts three pods: oud-ds-rs-0 and two replica pods oud-ds-rs-1 and oud-ds-rs-2.
The number of pods started is determined by the replicaCount, which is set to 3 by default. A value of 3 starts the three pods above.
To scale up or down the number of OUD pods, set replicaCount accordingly.</description>
    </item>
    
    <item>
      <title>a) Scaling Up/Down OUDSM Pods </title>
      <link>/fmw-kubernetes/22.4.1/oudsm/manage-oudsm-containers/scaling-up-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oudsm/manage-oudsm-containers/scaling-up-down/</guid>
      <description>Introduction This section describes how to increase or decrease the number of OUDSM pods in the Kubernetes deployment.
View existing OUDSM pods By default the oudsm helm chart deployment starts one pod: oudsm-1.
The number of pods started is determined by the replicaCount, which is set to 1 by default. A value of 1 starts the pod above.
To scale up or down the number of OUDSM pods, set replicaCount accordingly.</description>
    </item>
    
    <item>
      <title>a. Domain Life Cycle</title>
      <link>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/domain-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/domain-lifecycle/</guid>
      <description>View existing OAM servers Starting/Scaling up OAM Managed servers Stopping/Scaling down OAM Managed servers Stopping and starting the Administration Server and Managed Servers Domain lifecycle sample scripts  As OAM domains use the WebLogic Kubernetes Operator, domain lifecyle operations are managed using the WebLogic Kubernetes Operator itself.
This document shows the basic operations for starting, stopping and scaling servers in the OAM domain.
For more detailed information refer to Domain Life Cycle in the WebLogic Kubernetes Operator documentation.</description>
    </item>
    
    <item>
      <title>a. Patch an image</title>
      <link>/fmw-kubernetes/22.4.1/oudsm/patch-and-upgrade/patch-an-oudsm-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oudsm/patch-and-upgrade/patch-an-oudsm-image/</guid>
      <description>Introduction In this section the Oracle Unified Directory Services Manager (OUDSM) deployment is updated with a new OUDSM container image.
Note: If you are not using Oracle Container Registry or your own container registry, then you must first load the new container image on all nodes in your Kubernetes cluster.
You can update the deployment with a new OUDSM container image using one of the following methods:
 Using a YAML file Using --set argument  Using a YAML file   Navigate to the $WORKDIR/kubernetes/helm directory:</description>
    </item>
    
    <item>
      <title>a. Post Install Tasks</title>
      <link>/fmw-kubernetes/22.4.1/oig/post-install-config/set_oimfronendurl_using_mbeans/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/post-install-config/set_oimfronendurl_using_mbeans/</guid>
      <description>Follow these post install configuration steps.
 Create a Server Overrides File Set OIMFrontendURL using MBeans  Create a Server Overrides File   Navigate to the following directory:
cd $WORKDIR/kubernetes/create-oim-domain/domain-home-on-pv/output/weblogic-domains/governancedomain   Create a setUserOverrides.sh with the following contents:
DERBY_FLAG=false JAVA_OPTIONS=&amp;quot;${JAVA_OPTIONS} -Djava.net.preferIPv4Stack=true&amp;quot; MEM_ARGS=&amp;quot;-Xms8192m -Xmx8192m&amp;quot;   Copy the setUserOverrides.sh file to the Administration Server pod:
$ chmod 755 setUserOverrides.sh $ kubectl cp setUserOverrides.sh oigns/governancedomain-adminserver:/u01/oracle/user_projects/domains/governancedomain/bin/setUserOverrides.sh Where oigns is the OIG namespace and governancedomain is the domain_UID.</description>
    </item>
    
    <item>
      <title>a. Upgrade an operator release</title>
      <link>/fmw-kubernetes/22.4.1/oam/patch-and-upgrade/upgrade-an-operator-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/patch-and-upgrade/upgrade-an-operator-release/</guid>
      <description>These instructions apply to upgrading the operator within the 3.x release family as additional versions are released.
  On the master node, download the new WebLogic Kubernetes Operator source code from the operator github project:
$ mkdir &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-3.X.X $ cd &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-3.X.X $ git clone https://github.com/oracle/weblogic-kubernetes-operator.git --branch v3.X.X For example:
$ mkdir /scratch/OAMK8S/weblogic-kubernetes-operator-3.X.X $ cd /scratch/OAMK8S/weblogic-kubernetes-operator-3.X.X $ git clone https://github.com/oracle/weblogic-kubernetes-operator.git --branch v3.X.X This will create the directory &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-3.X.X/weblogic-kubernetes-operator
  Run the following helm command to upgrade the operator:</description>
    </item>
    
    <item>
      <title>a. Upgrade an operator release</title>
      <link>/fmw-kubernetes/22.4.1/oig/patch-and-upgrade/upgrade-an-operator-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/patch-and-upgrade/upgrade-an-operator-release/</guid>
      <description>These instructions apply to upgrading operators within the 3.x release family as additional versions are released.
  On the master node, download the new WebLogic Kubernetes Operator source code from the operator github project:
$ mkdir &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-3.X.X $ cd &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-3.X.X $ git clone https://github.com/oracle/weblogic-kubernetes-operator.git --branch v3.X.X For example:
$ mkdir /scratch/OIGK8S/weblogic-kubernetes-operator-3.X.X $ cd /scratch/OIGK8S/weblogic-kubernetes-operator-3.X.X $ git clone https://github.com/oracle/weblogic-kubernetes-operator.git --branch v3.X.X This will create the directory &amp;lt;workdir&amp;gt;/weblogic-kubernetes-operator-3.X.X/weblogic-kubernetes-operator
  Run the following helm command to upgrade the operator:</description>
    </item>
    
    <item>
      <title>a. Using an Ingress with NGINX (non-SSL)</title>
      <link>/fmw-kubernetes/22.4.1/oig/configure-ingress/ingress-nginx-setup-for-oig-domain-setup-on-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/configure-ingress/ingress-nginx-setup-for-oig-domain-setup-on-k8s/</guid>
      <description>Setting up an ingress for NGINX for the OIG domain on Kubernetes (non-SSL) The instructions below explain how to set up NGINX as an ingress for the OIG domain with non-SSL termination.
Note: All the steps below should be performed on the master node.
  Install NGINX
a. Configure the repository
b. Create a namespace
c. Install NGINX using helm
d. Setup routing rules for the domain
  Create an ingress for the domain</description>
    </item>
    
    <item>
      <title>b) Logging and Visualization for Helm Chart oud-ds-rs Deployment</title>
      <link>/fmw-kubernetes/22.4.1/oud/manage-oud-containers/logging-and-visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oud/manage-oud-containers/logging-and-visualization/</guid>
      <description>Introduction Install Elasticsearch and Kibana Create a Kubernetes secret Enable Logstash  Upgrade OUD deployment with ELK configuration Verify the pods   Verify and access the Kibana console  Introduction This section describes how to install and configure logging and visualization for the oud-ds-rs Helm chart deployment.
The ELK stack consists of Elasticsearch, Logstash, and Kibana. Using ELK you can gain insights in real-time from the log data from your applications.</description>
    </item>
    
    <item>
      <title>b) Logging and Visualization for Helm Chart oudsm Deployment</title>
      <link>/fmw-kubernetes/22.4.1/oudsm/manage-oudsm-containers/logging-and-visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oudsm/manage-oudsm-containers/logging-and-visualization/</guid>
      <description>Introduction This section describes how to install and configure logging and visualization for the oudsm Helm chart deployment.
The ELK stack consists of Elasticsearch, Logstash, and Kibana. Using ELK you can gain insights in real-time from the log data from your applications.
 Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases. As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected.</description>
    </item>
    
    <item>
      <title>b. Install and configure connectors</title>
      <link>/fmw-kubernetes/22.4.1/oig/post-install-config/install_and_configure_connectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/post-install-config/install_and_configure_connectors/</guid>
      <description>Download the connector   Download the Connector you are interested in from Oracle Identity Manager Connector Downloads.
  Copy the connector zip file to a staging directory on the master node e.g. &amp;lt;workdir&amp;gt;/stage and unzip it:
$ cp $HOME/Downloads/&amp;lt;connector&amp;gt;.zip &amp;lt;workdir&amp;gt;/&amp;lt;stage&amp;gt;/ $ cd &amp;lt;workdir&amp;gt;/&amp;lt;stage&amp;gt; $ unzip &amp;lt;connector&amp;gt;.zip $ chmod -R 755 * For example:
$ cp $HOME/Downloads/Exchange-12.2.1.3.0.zip /scratch/OIGK8S/stage/ $ cd /scratch/OIGK8S/stage/ $ unzip exchange-12.2.1.3.0.zip $ chmod -R 755 *   Copy OIG connectors There are two options to copy OIG Connectors to your Kubernetes cluster:</description>
    </item>
    
    <item>
      <title>b. Patch an image</title>
      <link>/fmw-kubernetes/22.4.1/oam/patch-and-upgrade/patch-an-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/patch-and-upgrade/patch-an-image/</guid>
      <description>Choose one of the following options to update your OAM kubernetes cluster to use the new image:
 Run the kubectl edit domain command Run the kubectl patch domain command  In all of the above cases, the WebLogic Kubernetes Operator will restart the Administration Server pod first and then perform a rolling restart on the OAM Managed Servers.
Note: If you are not using Oracle Container Registry or your own container registry, then you must first load the new container image on all nodes in your Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>b. Patch an image</title>
      <link>/fmw-kubernetes/22.4.1/oig/patch-and-upgrade/patch-an-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/patch-and-upgrade/patch-an-image/</guid>
      <description>Introduction The OIG domain patching script automatically performs the update of your OIG Kubernetes cluster with a new OIG container image.
The script executes the following steps sequentially:
 Checks if the helper pod exists in the given namespace. If yes, then it deletes the helper pod. Brings up a new helper pod with the new image. Stops the Administration Server, SOA and OIM managed servers using serverStartPolicy set as NEVER in the domain definition yaml.</description>
    </item>
    
    <item>
      <title>b. Upgrade Elasticsearch and Kibana</title>
      <link>/fmw-kubernetes/22.4.1/oudsm/patch-and-upgrade/upgrade-elk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oudsm/patch-and-upgrade/upgrade-elk/</guid>
      <description>This section shows how to upgrade Elasticsearch and Kibana.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Download the latest code repository Download the latest code repository as follows:
  Create a working directory to setup the source code.
$ mkdir &amp;lt;workdir&amp;gt; For example:
$ mkdir /scratch/OUDSMK8Slatest   Download the latest OUDSM deployment scripts from the OUDSM repository.</description>
    </item>
    
    <item>
      <title>b. Using an Ingress with NGINX (SSL)</title>
      <link>/fmw-kubernetes/22.4.1/oig/configure-ingress/ingress-nginx-setup-for-oig-domain-setup-on-k8s-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/configure-ingress/ingress-nginx-setup-for-oig-domain-setup-on-k8s-ssl/</guid>
      <description>Setting up an ingress for NGINX for the OIG domain on Kubernetes The instructions below explain how to set up NGINX as an ingress for the OIG domain with SSL termination.
Note: All the steps below should be performed on the master node.
  Create a SSL certificate
a. Generate SSL certificate
b. Create a Kubernetes secret for SSL
  Install NGINX
a. Configure the repository
b. Create a namespace</description>
    </item>
    
    <item>
      <title>b. WLST Administration Operations</title>
      <link>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/wlst-admin-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/wlst-admin-operations/</guid>
      <description>To use WLST to administer the OAM domain, use the helper pod in the same Kubernetes cluster as the OAM Domain.
  Check to see if the helper pod exists by running:
$ kubectl get pods -n &amp;lt;domain_namespace&amp;gt; | grep helper For example:
$ kubectl get pods -n oamns | grep helper The output should look similar to the following:
helper 1/1 Running 0 26h If the helper pod doesn&amp;rsquo;t exist then see Step 1 in Prepare your environment  to create it.</description>
    </item>
    
    <item>
      <title>c) Monitoring an Oracle Unified Directory Instance</title>
      <link>/fmw-kubernetes/22.4.1/oud/manage-oud-containers/monitoring-oud-instance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oud/manage-oud-containers/monitoring-oud-instance/</guid>
      <description>Introduction Install Prometheus and Grafana  Create a Kubernetes namespace Add Prometheus and Grafana Helm repositories Install the Prometheus operator View Prometheus and Grafana objects created Add the NodePort   Verify using Grafana GUI  Introduction After the Oracle Unified Directory instance (OUD) is set up you can monitor it using Prometheus and Grafana.
Install Prometheus and Grafana Create a Kubernetes namespace   Create a Kubernetes namespace to provide a scope for Prometheus and Grafana objects such as pods and services that you create in the environment.</description>
    </item>
    
    <item>
      <title>c) Monitoring an Oracle Unified Directory Services Manager Instance</title>
      <link>/fmw-kubernetes/22.4.1/oudsm/manage-oudsm-containers/monitoring-oudsm-instance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oudsm/manage-oudsm-containers/monitoring-oudsm-instance/</guid>
      <description>Introduction Install Prometheus and Grafana  Create a Kubernetes namespace Add Prometheus and Grafana Helm repositories Install the Prometheus operator View Prometheus and Grafana Objects Created Add the NodePort   Verify Using Grafana GUI  Introduction After the Oracle Unified Directory Services Manager instance is set up you can monitor it using Prometheus and Grafana.
Install Prometheus and Grafana Create a Kubernetes namespace   Create a Kubernetes namespace to provide a scope for Prometheus and Grafana objects such as pods and services that you create in the environment.</description>
    </item>
    
    <item>
      <title>c. Logging and Visualization</title>
      <link>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/logging-and-visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/logging-and-visualization/</guid>
      <description>After the OAM domain is set up you can publish operator and WebLogic Server logs into Elasticsearch and interact with them in Kibana.
Install Elasticsearch stack and Kibana If you do not already have a centralized Elasticsearch (ELK) stack then you must configure this first. For details on how to configure the ELK stack, follow Installing Elasticsearch (ELK) Stack and Kibana
Create the logstash pod Variables used in this chapter In order to create the logstash pod, you must create several files.</description>
    </item>
    
    <item>
      <title>c. Upgrade Ingress</title>
      <link>/fmw-kubernetes/22.4.1/oam/patch-and-upgrade/upgrade-an-ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/patch-and-upgrade/upgrade-an-ingress/</guid>
      <description>This section shows how to upgrade the ingress.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Download the latest code repository Download the latest code repository as follows:
  Create a working directory to setup the source code.
$ mkdir &amp;lt;workdir&amp;gt; For example:
$ mkdir /scratch/OAMK8Slatest   Download the latest OAM deployment scripts from the OAM repository.</description>
    </item>
    
    <item>
      <title>c. Upgrade Ingress</title>
      <link>/fmw-kubernetes/22.4.1/oig/patch-and-upgrade/upgrade-an-ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/patch-and-upgrade/upgrade-an-ingress/</guid>
      <description>This section shows how to upgrade the ingress.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Upgrading the ingress To upgrade the existing ingress rules, follow the steps below:
  List the existing ingress:
$ helm list -n &amp;lt;domain_namespace&amp;gt; For example:
$ helm list -n oigns The output will look similar to the following:
NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION governancedomain-nginx oigns 1 &amp;lt;DATE&amp;gt; deployed ingress-per-domain-0.</description>
    </item>
    
    <item>
      <title>d. Monitoring an OAM domain</title>
      <link>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/monitoring-oam-domains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/monitoring-oam-domains/</guid>
      <description>After the OAM domain is set up you can monitor the OAM instance using Prometheus and Grafana. See Monitoring a domain.
The WebLogic Monitoring Exporter uses the WLS RESTful Management API to scrape runtime information and then exports Prometheus-compatible metrics. It is deployed as a web application in a WebLogic Server (WLS) instance, version 12.2.1 or later, typically, in the instance from which you want to get metrics.
There are two ways to setup monitoring and you should choose one method or the other:</description>
    </item>
    
    <item>
      <title>d. Upgrade Elasticsearch and Kibana</title>
      <link>/fmw-kubernetes/22.4.1/oam/patch-and-upgrade/upgrade-elk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/patch-and-upgrade/upgrade-elk/</guid>
      <description>This section shows how to upgrade Elasticsearch and Kibana.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Undeploy Elasticsearch and Kibana From October 22 (22.4.1) onwards, OAM logs should be stored on a centralized Elasticsearch and Kibana stack.
Deployments prior to October 22 (22.4.1) used local deployments of Elasticsearch and Kibana.
If you are upgrading from July 22 (22.3.1) or earlier, to October 22 (22.</description>
    </item>
    
    <item>
      <title>d. Upgrade Elasticsearch and Kibana</title>
      <link>/fmw-kubernetes/22.4.1/oig/patch-and-upgrade/upgrade-elk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oig/patch-and-upgrade/upgrade-elk/</guid>
      <description>This section shows how to upgrade Elasticsearch and Kibana.
To determine if this step is required for the version you are upgrading to, refer to the Release Notes.
Download the latest code repository  Make sure you have downloaded the latest code as per Download the latest code repository.  Undeploy Elasticsearch and Kibana From October 22 (22.4.1) onwards, OIG logs should be stored on a centralized Elasticsearch and Kibana stack.</description>
    </item>
    
    <item>
      <title>e. Delete the OAM domain home</title>
      <link>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/delete-domain-home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.4.1/oam/manage-oam-domains/delete-domain-home/</guid>
      <description>Sometimes in production, but most likely in testing environments, you might want to remove the domain home that is generated using the create-domain.sh script.
  Run the following command to delete the domain:
$ cd $WORKDIR/kubernetes/delete-domain $ ./delete-weblogic-domain-resources.sh -d &amp;lt;domain_uid&amp;gt; For example:
$ cd $WORKDIR/kubernetes/delete-domain $ ./delete-weblogic-domain-resources.sh -d accessdomain   Drop the RCU schemas as follows:
$ kubectl exec -it helper -n &amp;lt;domain_namespace&amp;gt; -- /bin/bash [oracle@helper ~]$ [oracle@helper ~]$ export CONNECTION_STRING=&amp;lt;db_host.</description>
    </item>
    
  </channel>
</rss>